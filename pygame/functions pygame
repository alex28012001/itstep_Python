window = pygame.display.set_mode((1000, 600))  -  создает окно 1000 на 600

pygame.display.set_caption("Игра 1.0") - название окна 

screen = pygame.Surface((1000, 600)) - создание кокого либо обьекта(игровой экран)

screen.fill((50, 50, 50)) - цвет обьекта (игрового экрана)


done = True
while done :
    for e in pygame.event.get():    -   событие закрытия окна
        if e.type == pygame.QUIT:
            done = False


window.blit(screen, (0, 0)) - начало отрисовки обьекта (игрового экрана)

pygame.display.flip() - показывает окно

pygame.time.delay(25) - замедляет действия в окне

myimage = pygame.image.load("krest.png").convert() - создание обьекта(картинки,картинку надо загружать там где исполняемый файл)

myimage = pygame.transform.scale(myimage, (100, 100)) - конвертация картинки




 def Intersect(x1, x2, y1, y2):
    if (x1 > x2-70) and (x1 < x2 + 200) and (y1 > y2-70) and (y1 < y2+30):
        return 1
    else:
        return 0          -         функция при которой обьекты сталькиваються и отпружиниваються друг от друга
      EE ПРИМЕР:
      
          if Intersect(ball_x, panel_x, ball_y, panel_y) == True:
            ball_down = False

            ball_down = True
       
       
   
        
        
        
 
 while done:
    for e in pygame.event.get():
        if e.type == pygame.QUIT:
            done = False

        if e.type == pygame.KEYDOWN:         -      ВЗАИМОДЕЙСТВИЕ ОБЬЕКТА С КЛАВИФТУРОЙ

            if e.key == pygame.K_LEFT:
                if hero_x > 0:
                    hero_x -= 1
                    
                    
                    
pygame.key.set_repeat(1, 1)  -  продолжает движение обьекта  



Шрифты

pygame.font.init() - загрузка модуля для шрифтов

speed_font = pygame.font.SysFont("Buxton Sketch", 50) - задает шрифт и размер текста

inf_font = pygame.font.SysFont("Buxton Sketch", 50) - задает шрифт и размер текста





Строка состояния

info_string.blit(speed_font.render('Cкорость мяча: '+str(ball_step), 5, (255, 99, 71)), (5, 3))
                        =
info_string.blit(speed_font.render('Cкорость мяча: '  -  отрисовка на верху текст "Скорость мяча" заданным шрифтом в speed_font и размером ,

5 - сглаживание текста

(255, 99, 71)) - цвет этого текста

(5, 3) - координаты этого текста

+str(ball_step) - счётчик скоости мяча 

                        
        
        
                      
               
               
        
        
        
        
        
        










